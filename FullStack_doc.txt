DATE:22.07.2024
==================================================
FULL STACK DEVELOPER
===============================================
PROJECT
=================================
FRONT END
BACKEND
DATABASE
REAL TIMES TOOLS
==========================================
1.MAVEN
2.GRADEL
3.JUNIT
4.MOCKITO
5.POSTMAN
6.SWAGGER
7.DOCKER
8.KUBERNETES
9.SONARQUBE
10.JIRA
11.JOCCO
12.LOG4J2
=============================================================================
SOFTWARE
================================
JAVA17
IDE
==================
STS===SPRING TOOL SUITE

MYSQL
POSTMAN

FRONT END
=========================
VISUAL CODE STUDIO
=========================================================================
DBMS
===========================================================================
DATABASE MANAGEMENT SYSTEM
========================================================================
DATABASE
==================================================================
DATABASE IS COLLECTION OF INTERELATED TABLES OR DATA
=======================================================
DBMS 
============================
RDBMS
==================================
RELATIONAL DATABASE MANAGEMENT SYSTEM
================================================================================================
DBMS=DATABASE+SQL
SQL===STRUCTURED QUERY LANGUGAE
============================================================

JAVA==3RD GEN===HLL
BOTH HOW  PART AND WHAT PART KNOWN TO  US
SQL===4GL==NON PROCEDURAL LANGUAGE
HERE  HOW PART IS NOT KNOWN TO USE
ONLY WHAT PART IS KNOWN TO US
SELECT * FROM EMP;
COMMANDS OF SQL
===============================================================
1.DDL==DATA DEFINATION LANGUAGE
CREATE,TRUNCATE,DROP,ALTER,RENAME
2.DML
===============================
DATA MANIPULATION LANGUAGE
=================================
INSERT,UPDATE,DELETE,MERGE
DATA  RETRIEVAL
=================================
SELECT
==================================
TCL==TRANSACTION CONTROL LANGUAGE
===============================
COMMIT,ROLLBACK,SAVEPOINT
DCL
==================================
DATA CONTROL LANGUAGE
==================================
GRANT,REVOKE
DBMS RDBMS
========================
CONCEPT
MYSQL,ORACLE,SQLSERVER,POSTGRESQL
===============================================================
ADVANTAGE OF DBMS
================================
1.MINIMIZE DATA REDUNDENCY
2.DATA CAN BE SHARED
3.SECURITY RESTRICTION PROVIDED
4.INTEGRITY CONSTRAINTS MAINTAINED
==================================
DATATYPE OF MYSQL
=============================================
VARCHAR===ALPHANUMERIC===A01
VARCHAR(10)
DECIMAL
NUMBER(5)===99999
NUMBER(7,2)===99999.99
DATE
======================
YYYY-MM-DD
==============================================
CONSTRAINTS
========================================================================
BEFORE INSERTING ANY ROW INTO A TABLE YOU HAVE TO SATISFY CTAIN RULES AND REGULATIONS CALLED CONSTRAINTS
TYPES OF CONSTRAINTS
====================================
1.PRIMARY KEY===IT DOESN'T ACCEPT NULL VALUE AS WELL AS DUPLICATE VALUE
2.UNIQUE KEY===IT DOESN'T ACCEPT NULL VALUE BUT ACCEPT DUPLICATE VALUE
3.NOT NULL=YOU CAN'T LEFT BLANK TO THE FIELD
4.CHECK CONSTRAINTS===IT WILL SUPPORT PREDEFINED VALUES
EX:GENDER==M/F,MARITAL STATUS==Y/N
5.FOREIGN KEY==IT WIIL ACCEPT OTHER TABLE PRIMARY KEY VALUE
===========================================================================
LOGIN MYSQL
====================
1.MYSQL WORKBENCH
2.MYSQL COMMAND LINE CLIENT
3.COMMAND PROMPT

MAVEN IS A BUILD TOOL.
PURPOSE
=========================================
TO AUTOMATE PROJECT BUILDING PROCESS
========================================================
PROJECT BUILDING PROCESS
===============================================
1.DOWNLOAD LIBRARIES/JAR FILES
2.COMPILE THE SOURCE CODE
3.EXECUTE THE TEST CASES
4.PACKAGE THE APPLICATION INTO JAR  FILES OR WAR FILES

SET UP MAVEN
==============================================
1.COMMAND PROMPT
2.IDE===STS,ECLIPSE,INTELLIJ
==========================================================
TERMINOLOGY
===========================================================
ARCHIETYPE====TYPES OF PROJECT ===QUICKSTART,WEB
GROUPID====ORGANISATION NAME===com.aec
ARTIFACTID===NAME OF THE PROJECT
VERSION===SNAPSHOT  RELAEASE
SNAPSHOT===UNDER DEVELOPING
DEPENDENCY====LIBRARIES OR JAR FILES
REPOSITORY===LOCATION WHERE THE JAR FILES ARE STORED
 THREE TYPES
==============================
1.LOCAL===IT IS YOUR HDD
2.CENTRAL====WEB/CLOUD
3.REMOTE====IT IS THE COMPANY'S SERVER
GOAL====PROCESS OF BUILDING THE PROJECT
=================================================
1.CLEAN
2.COMPILE
3.TEST
4.PACKAGE
======================================================
pom.xml
============================================
IT IS CALLED THE HEART OF THE PROJECT
pom===PROJECT OBJECT M ODEL
PURPOSE
===========================
1.DEPENDENCY MANAGEMENT
2.PLUG IN
3.PROJECT MANAGEMENT
4.PACKAGING
TRANSITIVE DEPENDENCY
================================
PRACTICAL
===================================================
CREATE A NEW  MAVEN PROJECT
===ADD  SPRING CONTEXT DEPENDENCY
====CREATE THE JAR FILES

THEN ADD LOMBOK DEPENDENCY
CLEAN IT AND CREATE THE NEW JAR FILES
==========================================================
LOMBOK INSTALLATION
============================================================
C:\Users\arins\.m2\repository\org\projectlombok\lombok
==========================================================
DATE:23.07.2024
================================================================
JDBC
============================================
JAVA DATABASE CONNECTIVITY
WE NEED IMPORT ONE PACKAGE import java.sql.*;
java.sql.*====COLLECTION OF CLASSES AND INTERFACES
java.sql.*
===================================================
LIST OF INTERFACES
===========================
Connection==============TO ESTABLISH THE CONNECTION
Statement===============EXECUTE SQL QUERIES
PreparedStatement=======EXECUTE PRECOMPILED SQL STATEMENT
CallableStatement======EXECUTE STORED PROCEDURE
ResultSet==============RETRIEVE DATA FROM DATABASE AND STORE INTO RESULTSET
ResultSetMetaData======GIVE DETALS INFORMATION OF RESULTSET
DatabaseMetaData======GIVE DETAILS INFORMATION OF DATABASE
============================================================
CLASSES
===================================================
DriverManager====REGISTER AND LOAD THE JDBC DRIVER
Date=============DEALS DATE TYPE DATA
TimeStamp========DEALS WITH BOTH DATE AND TIME
=================================================
EXCEPTION HANDLE HERE
==============================================================
CHECKED EXCEPTION HANDLE HERE
======================================
ClassNotFoundException
SQLException
================================
STEPS OF COMMUNICATION
================================
import java.sql.*=====DONE
REGISTER AND LOAD THE JDBC DRIVER===DONE
ESTABLISH THE CONNECTION====DONE
CREATE THE STATEMENT
EXECUTE THE STATEMENT
RETRIEVE DATA INTO RESULTSET
CLOSE THE CONNECTION AND STATEMENT
================================================================
TYPES OF JDBC DRIVER
===================================
1.JDBC-ODBC BRIDGE====TYPE-I DRIVER
2.NATIVE API-JAVA=====TYPE-II DRIVER
3.JDBC NETWORK-ALL JAVA==TYPE-III DRIVER
4.NATIVE PROTOCOL-ALL JAVA===TYPE-IV DRIVER
======================================================
STEPS
=======================
DATABASE:FULLSTACKDB
TABLE:CUSTOMER
FIELDS    DATATYPE     SIZE     CONSTRAINTS
================================================
CID       VARCHAR       10      PRIMARY KEY
CNAME     VARCHAR       25      NOT NULL
CPHNO     VARCHAR       10      NOT NULL
========================================
   CREATE DATABASE FULLSTACKDB;
   USE FULLSTACKDB;
    CREATE TABLE CUSTOMER
     (CID  VARCHAR(10),
      CNAME VARCHAR(25) NOT NULL,
      CPHNO  VARCHAR(10) NOT NULL,
     CONSTRAINT CUSTOMER_CID_PK PRIMARY KEY(CID)
     );
DESC CUSTOMER;
==============================================
INSERT INTO CUSTOMER VALUES('C1','ANUP','343443');
SELECT * FROM CUSTOMER;
================================================
CRUD OPERATION
=====================
INSERT
UPDATE
DELETE
FETCH
=======================
 class X
{
public int add()
{
   return 
}
}
class Y{
public static void main(String args[])
{
    X x=new X();
    int  res=x.add();

}

}
public Connection getConn()
{
}
==================================================================================
HIBERNATE
===================================================================================
ORM====OBJECT RELATIONAL MAPPING
==============================================================
POJO CLASS
=================================================================
PLAIN OLD JAVA OBJECT
GETTER()
SETTER()
CONSRUCTOR
PARAMETERISED CONSTRUCTOR
toString()
========================================================================
CANDIDATE
=======================
cndid     String   10   PRIMARY KEY
CNDNM    STRING    25   NOT NULL
C1      ARUP
C2      AJOY
ADHAR
==============================
ADHNO    STRING  10  PK
CITY     STRING  25  NOT NULL
343434  KOLKATA
566556  CHENNAI
===================================================================================
DATE:24.07.2024
================================================================================
MAPPING RELATIONSHIP
=================================================================
1.ONE TO ONE MAPPING
2.ONE TO MANY MAPPING
3.MANY TO ONE MAPPING
4.MANY TO MANY MAPPING
==============================================================================
CRUD OPERATION USING HIBERNATE
======================================================
TABLE:STUDENT
ROLLNO====10====VARCHAR======PRIMARY KEY
SNAME=====25=====VARCHAR=====NOT NULL
SDEPT=====25======VARCHAR====NOT NULL
==================================================
FETCH DATA IN HIBERNATE CAN BE DONE BY THREE WAYS
====================================================
1.JPQL===JAVA PERSISTENCE  QUERY LANGUAGE====CLASS NAME
2.HQL====HIBERNATE QUERY LANGUAGE===ENTITY CLASS NAME
3.NATIVE SQL===NORMAL
String hql="from Student where sdept=:v_sdept";
REGISTER
========================================
UNAME   VARCHAR      15   PK
PASS    VARCHAR      10   NOT NULL
NM      VARCHAR      25   NOT NULL
EMAIL   VARCHAR      30   NOT NULL
========================================
arindam123  1234    arindam  a@gmail.com
deep123     test    DEEP     de@gmail.com
arindam123  1234
arindam123  5678
=========================================================
SPRING
====================================================================
TYPES OF APPLICATION
======================================
1.DESKTOP APPLICATION===CORE JAVA,AWT,SWING,HIBERNATE.SPRING   =====.JAR FILE
2.WEB APPLICATION======SERVLET,JSP,HTML,CSS,JAVASCRIPT,SPRING MVC  =====.WAR FILE
3.ENTERPRISE APPLICATION===EJB,SPRING                           =====.EAR(.JAR+.WAR)
======================================================================================
DEFINATION OF SPRING
====================================
SPRING IS AN OPEN SOURCE LIGHT WEIGHT DEPENCY INJECTION BASED FRAMEWORK SOFTWARE
TO DEVELOP JAVA/JEE BASED ENTERPRISE APPLICATION
================================================================================
HEAVY WEIGHT
====================================================
.java====compile===.class===container===.java==.class===o/p
LIGHT WEIGHT
=========================================================
.java===compile===.class==container==.class==O/P
POJO CLASSES
XML FILE/ANNOTATION
FRAMEWORK
=========================================================
CONCEPT    TECHNOLOGIES
DATABASE===JDBC
MAILING ===JAVAMAIL
MESSAGING===JMS/KAFKA
FRAMEWORK==TECHNOLOGIES+DESIGN PATTERN
DESIGN PATTERN 
==============================
WELL APPROVED SOLUTION
============================================================================
FEATURES OF SPRING
=======================================
1.IT SUPPORT CONTAINER SYSTEM
CONTAINER SYSTEM
================================
1.SCAN THE CLASSES
2.CREATE THE OBJECT
3.PROVIDE THE DATA TO THE OBJECT
4.DESTROY THE OBJECT
SPRING CONTAINER
============================
1.BeanFactory
2.ApplicationContext===ALSO CALLED IOC(INVERSION CONTROL)
WHAT IS THE ROLE OF PROGRAMMER
========================================
DEPEN DENCY
================================
INSTANCE VARIABLE IN SPRING BEAN CLASS CALLED DEPENDENCY
DEPENDENCY INJECTION
===================================
PROVIDE/UPDATE DATA INTO DEPENDENCY CALLED DEPENDENCY INJECTION
TYPES OF DEPENDENCY INJECTION
=====================================
1.PRIMITIVE TYPES==INTEGER,DOUBLE,FLOAT
2.COLLECTION TYPES===LIST,SET,MAP,PROPERTIES
3.OBJECT REFERENCE
4.CONSTRUCTOR INJECTION
=========================================
MODULES OF SPRING
=============================
1.SPRING CORE
2.SPRING DAO
3.SPRING CONTEXT
4.SPRING AOP
5.SPRING ORM
6.SPRING WEB MVC
SPRING CORE
===============================
THE RULES AND REGULATION GIVEN BY SPRING
RULES
==========================
1.SPRING BEAN CLASS SHOULD BE PUBLIC
2.GETTER()  & SETTER() METHOD
3.CONSTRUCTOR
4.CONSTRUCTOR WITH PARAMETER
5.toString()
6.EQUALS()
7.HASHCODE()
======================================
SETTER INJECTION
========================================
application.properties
@Value("${eid}")
@Value("${ename}")
colgnm={RAMAN,ROBIN,ALOKE,ROBIN}

	@Value("#{${job}}")

































